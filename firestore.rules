rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      return userRole in ['Admin', 'Super Admin'];
    }

    function isEmployeeOwner(employeeId) {
      let employeeUid = get(/databases/$(database)/documents/employees/$(employeeId)).data.uid;
      return request.auth.uid == employeeUid;
    }

    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if request.auth != null;
    }

    match /companies/{companyId} {
      allow read, create, update: if request.auth != null;
    }
    
    match /employees/{employeeId} {
      allow list: if request.auth != null;
      allow read, update, delete: if request.auth != null && (isEmployeeOwner(employeeId) || isAdmin());
      allow create: if request.auth != null;
    }

    match /projects/{projectId} {
      allow read, list: if request.auth != null;
      allow create, update, delete: if request.auth != null && isAdmin();
    }
    
    match /audit_logs/{logId} {
      allow create: if request.auth != null;
      allow read, list, update, delete: if false; // Logs are immutable and private
    }
  }
}
