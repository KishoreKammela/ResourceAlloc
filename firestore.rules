
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isAdmin() {
      return isAuthenticated() && (getUserRole(request.auth.uid) == 'Admin' || getUserRole(request.auth.uid) == 'Super Admin');
    }

    // Secure the 'users' collection
    match /users/{userId} {
      // Allow user to create their own profile on signup
      // Allow admin to create any user
      allow create: if isOwner(userId) || isAdmin();
      
      // Allow user to read their own profile
      // Allow admin to read any profile
      allow read: if isOwner(userId) || isAdmin();
      
      // Allow user to update their own profile (e.g. settings)
      // Allow admin to update any profile (e.g. change role)
      allow update: if isOwner(userId) || isAdmin();
      
      // Only admins can delete user profiles
      allow delete: if isAdmin();
    }

    // Secure the 'employees' collection
    match /employees/{employeeId} {
      // Anyone authenticated can view employee profiles
      allow read: if isAuthenticated();
      
      // Only Admins/Super Admins can create, update, or delete employees
      allow create, update, delete: if isAdmin();
    }

    // Secure the 'projects' collection
    match /projects/{projectId} {
       // Anyone authenticated can view projects
      allow read: if isAuthenticated();
      
      // Only Admins/Super Admins can create, update, or delete projects
      allow create, update, delete: if isAdmin();
    }
  }
}
